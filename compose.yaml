version: "3.9"

services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - 3001:3000
    environment:
      - BACKEND_URL=http://crud.navong.xyz/api
    restart: always
    labels:
      - "traefik.http.routers.frontend.rule=Host(`crud.navong.xyz`)"
      # - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend
      - traefik
    networks:
      - traefik-network

  backend:
    container_name: backend
    image: backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - 4000:4000
    environment:
      DATABASE_URL: postgresql://postgres:postgres@server.navong.xyz:5432/crud?schema=public
    labels:
      - "traefik.http.routers.backend.rule=(Host(`crud.navong.xyz`) && PathPrefix(`/api`))"
      # - "traefik.http.services.backend.loadbalancer.server.port=4000"
    depends_on:
      - traefik
    networks:
      - traefik-network

  # db:
  #   container_name: db
  #   image: postgres:12
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: postgres
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   networks:
  #     - traefik-network

  traefik:
    container_name: traefik
    image: traefik:latest
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-network
    restart: always

volumes:
  postgres_data:

networks:
  traefik-network:
    external: true

